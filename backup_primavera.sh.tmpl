#!/usr/bin/env bash

 #######################################################################
 # Script that stores output and restart of one leg of a run.          #
 # Two inputs, EXP and LEG number. Here, we have a template so sed it. #
 #######################################################################
 # Notes (AMIP):                                                       #
 # - 3hr walltime is enough for std res, 12hr is needed for the hires  #
 #   However ECFS can be very slow sometimes, and more time needed     #
 # - but can be resubmitted if crashed                                 #
 # - safely restart where it stops if crashes. Just resubmit.          #
 # - do not use the tar_restart option with HIRES runs                 #
 #######################################################################

set -xvue

exp=%EXPID%
leg=%CHUNK%
start_date=%SDATE%
member=%MEMBER%
Chunk_start_date=%Chunk_START_DATE%
Chunk_end_date=%Chunk_END_DATE%
fdate="${Chunk_start_date}-${Chunk_end_date}"

######################### Hardcoded options #########################
[ "%Chunk_LAST%" = TRUE ] && is_last=1 || is_last=0

do_ifs_output=1
do_ifs_restart=1
[ "%IFS_resolution%" = T255L91 ] && tar_ifs_restart=1 || tar_ifs_restart=0

do_nemo_output=1
do_nemo_restart=1
tar_nemo_restart=1

do_oasis_restart=1
tar_oasis_restart=1

# IN & OUT top dirs
runs_dir="${SCRATCH}"
ecfs_dir="ec:/c3m/exp/${exp}"

#####################################################################

nextleg=$(( leg + 1 ))
legnb=$(printf %03d ${leg})
legnbP1=$(printf %03d ${nextleg})

do_log=${is_last}


# All command to be executed from the run top directory
cd ${runs_dir}/${exp}/${start_date}/${member}/runtime

bckp_emcp () {
    #emv -e $1  ${ecfs_dir}/$1
    ecp -n $1  ${ecfs_dir}/$1
    echmod 444 ${ecfs_dir}/$1
}

maxsize=34359738368             # limit in bytes for emv

split_move () {
    # split in 3 if larger than what emv can handle (34359738368 bytes)
    local f=$1
    actualsize=$(du -b "$f" | cut -f 1)
    if (( $actualsize > $maxsize )); then
        split -n 3 -a 1 -d $f ${f}_
        \rm -f $f
        for k in {0..2}
        do 
            bckp_emcp ${f}_${k}
        done
    else
        bckp_emcp $f
    fi
}

############
# RESTARTS #
############

if (( do_ifs_restart ))
then

    if [[ -d restart/ifs/${legnbP1} ]] || (( is_last ))
    then
        echo; echo " *** IFS RESTART ***"; echo

        emkdir -p ${ecfs_dir}/restart/ifs/${legnbP1}
        echmod 755 ${ecfs_dir}/restart/ifs/${legnbP1}

        if (( is_last ))
        then
            for f in srf* ece.info rcf
            do
                if [[ -f $f ]]; then
                    #emv -e $f ${ecfs_dir}/restart/ifs/${legnbP1}/$f
                    ecp -n $f ${ecfs_dir}/restart/ifs/${legnbP1}/$f
                    echmod 444 ${ecfs_dir}/restart/ifs/${legnbP1}/$f
                fi
            done
        else
            if (( tar_ifs_restart ))
            then 
                #f=$(echo restart/ifs/${legnbP1} | sed "s|/|.|g").tar
                f=$(echo restart/ifs/${legnbP1}).tar
                tar -cf $f restart/ifs/${legnbP1}
                bckp_emcp $f
            else
                for f in restart/ifs/${legnbP1}/*
                do
                    [[ -f $f ]] && bckp_emcp $f
                done        
            fi
        fi
    fi
fi

if (( do_nemo_restart ))
then

    if [[ -d restart/nemo/${legnbP1} ]] || (( is_last ))
    then
        echo; echo " *** NEMO RESTART ***"; echo

        emkdir -p ${ecfs_dir}/restart/nemo/${legnbP1}
        echmod 755 ${ecfs_dir}/restart/nemo/${legnbP1}

        if (( is_last ))
        then
            for f in ${exp}_????????_restart_oce_????.nc ${exp}_????????_restart_ice_????.nc
            do
                if [[ -f $f ]]; then
                    #emv -e $f ${ecfs_dir}/restart/nemo/${legnbP1}/$f
                    ecp -n $f ${ecfs_dir}/restart/nemo/${legnbP1}/$f
                    echmod 444 ${ecfs_dir}/restart/nemo/${legnbP1}/$f
                fi
            done
        else
            if (( tar_nemo_restart ))
            then 
                #f=$(echo restart/nemo/${legnbP1} | sed "s|/|.|g").tar
                f=$(echo restart/nemo/${legnbP1}).tar
                tar -cf $f restart/nemo/${legnbP1}
                bckp_emcp $f
            else
                for f in restart/nemo/${legnbP1}/*
                do
                    [[ -f $f ]] && bckp_emcp $f
                done        
            fi
        fi
    fi
fi

if (( do_oasis_restart ))
then

    if [[ -d restart/oasis/${legnbP1} ]]
    then
        echo; echo " *** OASIS RESTART ***"; echo

        emkdir -p ${ecfs_dir}/restart/oasis/${legnbP1}
        echmod 755 ${ecfs_dir}/restart/oasis/${legnbP1}

        if (( tar_oasis_restart ))
        then 
            #f=$(echo restart/oasis/${legnbP1} | sed "s|/|.|g").tar
            f=$(echo restart/oasis/${legnbP1}).tar
            tar -cf $f restart/oasis/${legnbP1}
            bckp_emcp $f
        else
            for f in restart/oasis/${legnbP1}/*
            do
                [[ -f $f ]] && bckp_emcp $f
            done        
        fi
    fi
fi


###############
# NEMO output #
###############

if (( do_nemo_output ))
then
    echo; echo " *** NEMO OUTPUT ***"; echo

    emkdir -p ${ecfs_dir}/output/nemo/${legnb}
    echmod 755 ${ecfs_dir}/output/nemo/${legnb}

    for ff in output/nemo/${legnb}/*
    do
        if [[ $ff =~ ${exp}.*\.nc$ ]]
        then
            gzip ${ff}
            split_move $ff.gz
        else
            [[ -f $ff ]] && split_move $ff
        fi
    done
fi
 
##############
# IFS output #
##############

if (( do_ifs_output ))
then
    echo; echo " *** IFS OUTPUT ***"; echo

    emkdir -p ${ecfs_dir}/output/ifs/${legnb}
    echmod 755 ${ecfs_dir}/output/ifs/${legnb}

    for f in output/ifs/${legnb}/*   # only GG not SH files are worth zipping
    do        
        # -- already compressed GG
        if [[ $f =~ ICMGG${exp}.*gz$ ]]
        then
            split_move $f

        # -- compress GG
        elif [[ $f =~ ICMGG${exp} ]]
        then
            gzip ${f}
            split_move $f.gz
        else
            # check on file, may have been emoved if a split was repeated
            [[ -f $f ]] && split_move $f
        fi
    done
fi

#     # TODO find a way to tar one full year in multi year run
#     # if hiresclim has been run
#     if [[ -d post ]]
#     then
#         f=${exp}_${year}_ifshc_output.tar.gz
#         tar -zcvf $f post
#         bckp_emcp $f
#     fi
 
#######
# LOG #
#######
if (( do_log ))
then
    f=log.${exp}.upto.${legnb}.tar.gz
    tar -cvzf $f log
    bckp_emcp $f
fi

